import time

import telebot
import sqlite3
# Scary!
import re
from random import randint, choice
from telebot import types
import os

# –°—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç–∞ –°8:
bot = telebot.TeleBot('7066300352:AAHoKT8LAaZd4pdnkbU3vlzBijI25bM7Xqo')

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


class SnakeGame:
    def __init__(self, group_id):
        self.score = None
        self.apple_position = None
        self.snake_segments = None
        self.db_connection = sqlite3.connect(f'DBGAMES' + str(group_id) + 'S8.db')
        self.db_cursor = self.db_connection.cursor()
        self.setup_game()

    def setup_game(self):
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        self.db_cursor.execute('''CREATE TABLE IF NOT EXISTS Snake_S8 (
                                    snake_segments TEXT,
                                    apple_position TEXT
                                  )''')
        self.db_connection.commit()

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
        self.snake_segments = [(3, 3)]  # –°–µ–≥–º–µ–Ω—Ç—ã –∑–º–µ–∏ (–Ω–∞—á–∏–Ω–∞–µ–º –≤ —Ü–µ–Ω—Ç—Ä–µ)
        self.apple_position = self.generate_new_apple()
        self.score = 0

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        self.save_game_state()

    def save_game_state(self):
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        self.db_cursor.execute('''INSERT INTO Snake_S8 (snake_segments, apple_position)
                                   VALUES (?, ?)''', (str(self.snake_segments), str(self.apple_position)))
        self.db_connection.commit()

    def generate_new_apple(self):
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ —Å–ª—É—á–∞–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —è–±–ª–æ–∫–∞
        apple_x = randint(0, 6)
        apple_y = randint(0, 6)
        return apple_x, apple_y

    def move_snake(self, direction):
        head_x, head_y = self.snake_segments[0]

        if direction == 'up':
            new_head = (head_x, head_y - 1)
        elif direction == 'down':
            new_head = (head_x, head_y + 1)
        elif direction == 'left':
            new_head = (head_x - 1, head_y)
        elif direction == 'right':
            new_head = (head_x + 1, head_y)
        else:
            return False  # –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ —Å —Ç–µ–ª–æ–º –∑–º–µ–∏
        if new_head in self.snake_segments[1:]:
            self.end_game()
            return False

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ —Å –≥—Ä–∞–Ω–∏—Ü–∞–º–∏ –∫–∞—Ä—Ç—ã
        if not (0 <= new_head[0] <= 6 and 0 <= new_head[1] <= 6):
            self.end_game()
            return False

        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –≥–æ–ª–æ–≤—É –∫ –∑–º–µ–µ
        self.snake_segments.insert(0, new_head)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—ä–µ–ª–∞ –ª–∏ –∑–º–µ—è —è–±–ª–æ–∫–æ
        if new_head == self.apple_position:
            self.apple_position = self.generate_new_apple()
            self.score += 1
        else:
            # –£–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–µ–≥–º–µ–Ω—Ç –∑–º–µ–∏
            self.snake_segments.pop()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
        self.save_game_state()

        return True

    def display_game(self):
        # –í—ã–≤–æ–¥–∏–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —ç–º–æ–¥–∑–∏
        for y in range(7):
            for x in range(7):
                if (x, y) in self.snake_segments:
                    if (x, y) == self.snake_segments[0]:
                        print('üÖæÔ∏è', end=' ')
                    else:
                        print('üü•', end=' ')
                elif (x, y) == self.apple_position:
                    print('üçé', end=' ')
                else:
                    print('üü¶', end=' ')
            print()  # –ù–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø–æ–ª—è

    def end_game(self):
        print(f"–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –í–∞—à —Å—á—ë—Ç: {self.score}")
        self.db_connection.close()
        exit()

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
# game = SnakeGame()
# game.display_game()
#
# while True:
#     direction = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (up/down/left/right): ")
#     if game.move_snake(direction):
#         game.display_game()
#     else:
#         print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'up', 'down', 'left', –∏–ª–∏ 'right'.")


# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:


# --  START -- –ù–∞—á–∞–ª–æ –æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º, –≤—ã–≤–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–º–º–∞–Ω–¥

@bot.message_handler(commands=['start'])
def start(message):
    if message.chat.type == 'private':
        bot.send_message(message.chat.id, f'<b>–ü—Ä–∏–≤–µ—Ç! –Ø —á–∞—Ç –±–æ—Ç S8.</b>\n'
                                          f'–Ø –±—É–¥—É –ø–æ–º–æ–≥–∞—Ç—å –≤–∞–º —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞—Ç—å –≥—Ä—É–ø–ø—ã, –∞ —Ç–∞–∫–∂–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ '
                                          f'–∏ —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏\n'
                                          f'<b>–ß—Ç–æ–±—ã —è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞–ª, –¥–æ–±–∞–≤—å—Ç–µ –º–µ–Ω—è –≤ —Å–≤–æ—é –≥—Ä—É–ø–ø—É –∫–∞–∫ '
                                          f'–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</b>\n'
                                          f'–í–æ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª–µ–∑–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ - /menu\n'
                                          f'<b>–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≥—Ä—É–ø–ø—ã —á–µ—Ä–µ–∑ –ª—Å</b>:\n'
                                          f'–í–ø–∏—à–∏—Ç–µ –≤ —Å–≤–æ—é –≥—Ä—É–ø–ø—É –∫–æ–º–∞–Ω–¥—ã:\n'
                                          f'<b>//add_to_admin_list</b> - —è –±—É–¥—É –∑–Ω–∞—Ç—å, —á—Ç–æ –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–æ–º\n'
                                          f'<b>//get_group_id</b> - –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø—Ä–æ—Å–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏\n'
                                          f'–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω—ë–º!', parse_mode='html')

    elif message.chat.type in ['group', 'supergroup']:
        bot.send_message(message.chat.id, f'<b>–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! –Ø —á–∞—Ç –±–æ—Ç S8.</b>\n'
                                          f'–Ø –±—É–¥—É –ø–æ–º–æ–≥–∞—Ç—å –≤–∞–º —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞—Ç—å –≥—Ä—É–ø–ø—ã, –∞ —Ç–∞–∫–∂–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ '
                                          f'–∏ —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏\n'
                                          f'<b>–ß—Ç–æ–±—ã —è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞–ª, –¥–æ–±–∞–≤—å—Ç–µ –º–µ–Ω—è –≤ —Å–≤–æ—é –≥—Ä—É–ø–ø—É –∫–∞–∫ '
                                          f'–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</b>\n'
                                          f'–í–æ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª–µ–∑–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ - /menu\n'
                                          f'<b>–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≥—Ä—É–ø–ø—ã —è –º–æ–≥—É –∏–∑–º–µ–Ω—è—Ç—å –≤ –ª—Å</b>'
                                          f'–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω—ë–º!', parse_mode='html')

        group_db_name = 'DB' + str(message.chat.id) + 'S8.db'

        con = sqlite3.connect(group_db_name)
        cur = con.cursor()

        cur.execute("""CREATE TABLE IF NOT EXISTS 
                        Admins(admin TEXT UNIQUE)""")

        cur.execute("""CREATE TABLE IF NOT EXISTS 
                        Banned_words(phrase TEXT UNIQUE, punishment_type TEXT)""")

        cur.execute("""CREATE TABLE IF NOT EXISTS 
                        User_ids(username TEXT UNIQUE, id TEXT UNIQUE)""")

        con.commit()
        con.close()


# ------------------------------------------------------------------------------------

# -- MENU -- –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥, –≤—ã–≤–æ–¥–∏—Ç –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.


@bot.message_handler(commands=['menu'])
def menu(message):
    bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n'
                                      '(‚ùó - –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º)\n'
                                      '/start - –ù–∞—á–∞–ª–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞\n'
                                      '/menu - –ú–µ–Ω—é —Å–æ –≤—Å–µ–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏\n'
                                      '/quick_menu - –ú–µ–Ω—é —Å –±—ã—Å—Ç—Ä—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏\n'
                                      '/blacklisted_words -‚ùó- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏\n'
                                      '/coin_flip - –ü–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ—Ç –º–æ–Ω–µ—Ç–∫—É\n'
                                      '/rtd - –ö–∏–¥–∞–µ—Ç –∫–æ—Å—Ç—å d100\n'
                                      '/play_game -‚ùó- –ó–∞–ø—É—Å–∫–∞–µ—Ç –∏–≥—Ä—É\n'
                                      '–ë–æ–ª—å—à–µ –∫–æ–º–º–∞–Ω–¥ –¥–ª—è –∞–¥–º–∏–Ω–∏–º—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≤ /blacklisted_words')


# ------------------------------------------------------------------------------------

# -- QUICK_MENU -- –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±—ã—Å—Ç—Ä—ã—Ö –∫–æ–º–∞–Ω–¥, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å //, –≤—Å–µ 3 –≤–∏–¥–∞

@bot.message_handler(commands=['quick_menu'])
def menu(message):
    bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ –±—ã—Å—Ç—Ä—ã—Ö –∫–æ–º–∞–Ω–¥ - –æ–Ω–∏ –≤–≤–æ–¥—è—Ç—Å—è –∫–∞–∫ —Å–æ–æ–±—â–µ–Ω–∏—è.\n'
                                      '(‚ùó - –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º)\n\n'
                                      '--- –¢–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—ã:\n'
                                      '//mdata -‚ùó- –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n'
                                      '//add_to_admin_list -‚ùó- –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –≥—Ä—É–ø–ø—ã\n'
                                      '//get_group_id -‚ùó- –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –∫–æ–¥ –≥—Ä—É–ø–ø—ã\n'
                                      '//game_stop -‚ùó- –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∏–¥—É—â–∞—é –∏–≥—Ä—É\n'
                                      '//members - –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã\n\n'
                                      '--- –ö–æ–º–∞–Ω–¥—ã —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏\n'
                                      '//mute {@-} {d:h:m} -‚ùó- –∑–∞–≥–ª—É—à–∞–µ—Ç –ø–æ–ª–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ d, h, m –¥–Ω–µ–π, '
                                      '—á–∞—Å–æ–≤, –º–∏–Ω—É—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ\n'
                                      '//unmute {@-} -‚ùó- —É–±—Ä–∞—Ç—å –∑–∞–≥–ª—É—à–µ–Ω–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n'
                                      '//remove_from_admin_list {@-} -‚ùó- —É–±—Ä–∞—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–æ–≤\n'
                                      '//bwl_add {—Ñ—Ä–∞–∑–∞: –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–µ}-‚ùó- –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ —Å–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤ —Å–ø–∏—Å–æ–∫,'
                                      '–∫–∞–∂–¥—É—é —Ñ—Ä–∞–∑—É —Å –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–µ –ø–∏—Å–∞—Ç—å —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏, –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è: m, k, a - '
                                      '–∑–∞–≥–ª—É—à–∏—Ç—å –Ω–∞ —á–∞—Å, –∫–∏–∫–Ω—É—Ç—å, –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ\n'
                                      '//bwl_remove {—Ñ—Ä–∞–∑–∞} -‚ùó- –≤–≤–æ–¥—è—Ç—Å—è —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏, —É–¥–∞–ª—è–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞'
                                      '–≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã –µ—Å–ª–∏ –µ—Å—Ç—å\n'
                                      '//bwl_delete -‚ùó- —É–¥–∞–ª—è–µ—Ç –≤–µ—Å—å —Å–ø–∏—Å–æ–∫\n'
                                      '//bwl_show_list -‚ùó- –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–µ—Å—å —Å–ø–∏—Å–æ–∫\n'
                                      '//game_start {–∏–≥—Ä–∞} -‚ùó- –∑–∞–ø—É—Å–∫–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—É—é –∏–≥—Ä—É (–∑–º–µ–π–∫–∞ / )\n'
                                      '//poll {–≤—ã–±–æ—Ä—ã} -‚ùó- —Å–æ–∑–¥–∞–µ—Ç –æ–ø—Ä–æ—Å —Å –≤—ã–±–æ—Ä–∞–º–∏ –≤ –≤–∏–¥–µ –≤–≤–µ–¥–µ–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤,'
                                      '–∫–∞–∂–¥—ã–π —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ \n\n'
                                      '--- –ó–∞–º–µ–Ω—è—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã (–±–æ—Ç –∑–∞–º–µ–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)\n'
                                      '//coin_flip - –∑–∞–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ –æ—Ä—ë–ª–∞ / —Ä–µ—à–∫—É\n'
                                      '//rtd - –∑–∞–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ —á–∏—Å–ª–æ 1 - 100\n'
                                      '//pick_user - –∑–∞–º–µ–Ω—è–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º')


# ------------------------------------------------------------------------------------


# -- BLACKLISTED_WORDS -- –†–∞–±–æ—Ç–∞ —Å –Ω–µ–ª–µ–≥–∞–ª—å–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏


@bot.message_handler(commands=['blacklisted_words'])
def blacklisted_words_main(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, selective=True)
    btn1 = types.KeyboardButton('‚úÖ –î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–∞')
    btn2 = types.KeyboardButton('‚ùå –£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–∞')
    btn3 = types.KeyboardButton('‚û° –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫')
    btn4 = types.KeyboardButton('üí• –£–¥–∞–ª–∏—Ç—å —Å–ø–∏—Å–æ–∫')
    btn5 = types.KeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è')

    markup.add(btn1, btn2, btn3, btn4, btn5)

    if message.chat.type in ['group', 'supergroup']:
        bot.reply_to(message, '–°–µ–π—á–∞—Å –≤—ã –∏–∑–º–µ–Ω—è–µ—Ç–µ —Å–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤ –≤ –≥—Ä—É–ø–ø–µ.\n'
                              '–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–Ω–∞—Ç–æ–≤ —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.', reply_markup=markup)
    elif message.chat.type == 'private':
        bot.reply_to(message, '–°–µ–π—á–∞—Å –≤—ã –∏–∑–º–µ–Ω—è–µ—Ç–µ —Å–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤ –≤ –≥—Ä—É–ø–ø–µ.\n'
                              '–î–ª—è —ç—Ç–æ–≥–æ –≤–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –∫–æ–¥ –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã (–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –≤ /start)\n'
                              '–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–Ω–∞—Ç–æ–≤ —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.\n', reply_markup=markup)


# ------------------------------------------------------------------------------------

# -- COIN_FLIP -- –ü–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ—Ç –º–æ–Ω–µ—Ç–∫—É –∏ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∑–∞–æ–º –≤—ã–±–∏—Ä–∞–µ—Ç –æ—Ä–ª–∞ –∏–ª–∏ —Ä–µ—à–∫—É.


@bot.message_handler(commands=['coin_flip'])
def coin_flip(message):
    coin_random = randint(0, 1)
    coin = ['–û–†–Å–õ', '–†–ï–®–ö–ê'][coin_random]
    word = ['–æ–∫–∞–∑–∞–ª—Å—è', '–æ–∫–∞–∑–∞–ª–∞—Å—å'][coin_random]
    bot.reply_to(message, f'–ú–æ–Ω–µ—Ç–∫–∞ –±—ã–ª–∞ –ø–æ–¥–±—Ä–æ—à–µ–Ω–∞ –≤ –≤–æ–∑–¥—É—Ö, –∏ –∫–æ–≥–¥–∞ –æ–Ω–∞ –ø—Ä–∏–∑–µ–º–ª–∏–ª–∞—Å—å, –Ω–∞ –Ω–µ–π {word}...'
                          f' \n \n<b>{coin}!</b>', parse_mode='html')


# ------------------------------------------------------------------------------------

# -- DICE_ROLL -- –ö–∏–¥–∞–µ—Ç n-–≥—Ä–∞–Ω–Ω—É—é –∫–æ—Å—Ç—å –ø–æ —á–∏—Å–ª—É, –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.


@bot.message_handler(commands=['rtd'])
def dice_roll(message):
    dice_rolled = randint(1, 100)
    bot.reply_to(message, f'–ö–æ—Å—Ç—å –±—ã–ª–∞ –±—Ä–æ—à–µ–Ω–∞, –∏ –Ω–∞ –Ω–µ–π –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ...'
                          f'\n\n<b>{dice_rolled}!</b>', parse_mode='html')


# ------------------------------------------------------------------------------------

# -- COIN_FLIP -- –ü–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ—Ç –º–æ–Ω–µ—Ç–∫—É –∏ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∑–∞–æ–º –≤—ã–±–∏—Ä–∞–µ—Ç –æ—Ä–ª–∞ –∏–ª–∏ —Ä–µ—à–∫—É.


@bot.message_handler(commands=['game'])
def snake_start(message):
    g = SnakeGame(message.chat.id)
    g.display_game()

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# –ü—Ä–æ–≤–∫—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ —Å –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:


@bot.message_handler(func=lambda message: True)
def commands_in_text(message):
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏:

    if message.text == 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è':
        bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: /menu', reply_markup=types.ReplyKeyboardRemove())

    # -----------------------------------------------------------------

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ —Å –∫–æ–º–∞–Ω–¥—ã BLACKLISTED_WORDS:
    if message.text == '‚úÖ –î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–∞':
        if message.chat.type in ['group', 'supergroup']:
            if str(bot.get_chat_member(message.chat.id, message.from_user.id).status) in ('creator', 'administrator'):
                bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –≤—ã –±—É–¥–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å —Ñ—Ä–∞–∑—ã –≤ —Å–ø–∏—Å–æ–∫.\n'
                                                  'üîπ <b>–§–æ—Ä–º–∞—Ç:</b> \n'
                                                  '–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ - –∫–æ–º–∞–Ω–¥–∞ <b>//bwl_add</b>,\n'
                                                  '–ü–æ—Å–ª–µ–¥—É—é—â–∏–µ - —Å–ª–æ–≤–æ, <i>–ø—Ä–æ–±–µ–ª</i>, –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–µ.\n'
                                                  'üî∏ <b>–¢–∏–ø—ã –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π: </b>\n'
                                                  '<b>a</b> - –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å,\n'
                                                  '<b>m</b> - –∑–∞–≥–ª—É—à–∏—Ç—å –Ω–∞ —á–∞—Å, \n'
                                                  '<b>k</b> - –∫–∏–∫–Ω—É—Ç—å\n'
                                                  '–ö–∞–∂–¥–∞—è —Ñ—Ä–∞–∑–∞ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å—Ç—Ä–æ–∫–∞—Ö',
                                 reply_markup=types.ReplyKeyboardRemove(), parse_mode='html')

        elif message.chat.type == 'private':
            bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –≤—ã –±—É–¥–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å —Ñ—Ä–∞–∑—ã –≤ —Å–ø–∏—Å–æ–∫.\n'
                                              'üîπ <b>–§–æ—Ä–º–∞—Ç: </b>\n'
                                              '–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ - –∫–æ–º–∞–Ω–¥–∞ <b>//bwl_add</b>,\n'
                                              '–í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ - <i>–ö–æ–¥ –≥—Ä—É–ø–ø—ã</i>\n'
                                              '–ü–æ—Å–ª–µ–¥—É—é—â–∏–µ - —Å–ª–æ–≤–æ, <i>–ø—Ä–æ–±–µ–ª</i>, –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–µ.\n'
                                              'üî∏ <b>–¢–∏–ø—ã –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π: </b>\n'
                                              '<b>a</b> - –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å,\n'
                                              '<b>m</b> - –∑–∞–≥–ª—É—à–∏—Ç—å –Ω–∞ —á–∞—Å, \n'
                                              '<b>k</b> - –∫–∏–∫–Ω—É—Ç—å\n'
                                              '–ö–∞–∂–¥–∞—è —Ñ—Ä–∞–∑–∞ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å—Ç—Ä–æ–∫–∞—Ö',
                             reply_markup=types.ReplyKeyboardRemove(), parse_mode='html')

    # -----------------------------------------------------------------

    elif message.text == '‚ùå –£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–∞':
        if message.chat.type in ['group', 'supergroup']:
            if str(bot.get_chat_member(message.chat.id, message.from_user.id).status) in ('creator', 'administrator'):
                bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –≤—ã –±—É–¥–µ—Ç–µ —É–¥–∞–ª—è—Ç—å —Ñ—Ä–∞–∑—ã –∏–∑ —Å–ø–∏—Å–∫–∞.\n'
                                                  'üîπ <b>–§–æ—Ä–º–∞—Ç:</b> \n'
                                                  '–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ - –∫–æ–º–∞–Ω–¥–∞ <b>//bwl_remove</b>\n'
                                                  '–ü–æ—Å–ª–µ–¥—É—é—â–∏–µ - —Å–ª–æ–≤–æ.\n'
                                                  '–ö–∞–∂–¥–∞—è —Ñ—Ä–∞–∑–∞ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å—Ç—Ä–æ–∫–∞—Ö!',
                                 reply_markup=types.ReplyKeyboardRemove(), parse_mode='html')

        elif message.chat.type == 'private':
            bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –≤—ã –±—É–¥–µ—Ç–µ —É–¥–∞–ª—è—Ç—å —Ñ—Ä–∞–∑—ã –∏–∑ —Å–ø–∏—Å–∫–∞.\n'
                                              'üîπ <b>–§–æ—Ä–º–∞—Ç:</b> \n'
                                              '–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ - –∫–æ–º–∞–Ω–¥–∞ <b>//bwl_remove</b>\n'
                                              '–í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ - <i>–ö–æ–¥ –≥—Ä—É–ø–ø—ã</i>\n'
                                              '–ü–æ—Å–ª–µ–¥—É—é—â–∏–µ - —Å–ª–æ–≤–æ.\n'
                                              '–ö–∞–∂–¥–∞—è —Ñ—Ä–∞–∑–∞ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å—Ç—Ä–æ–∫–∞—Ö!',
                             reply_markup=types.ReplyKeyboardRemove(), parse_mode='html')

    # -----------------------------------------------------------------

    elif message.text == '‚û° –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫':
        if message.chat.type in ['group', 'supergroup']:
            if str(bot.get_chat_member(message.chat.id, message.from_user.id).status) in ('creator', 'administrator'):
                bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É <b>//bwl_show_list</b>',
                                 reply_markup=types.ReplyKeyboardRemove(), parse_mode='html')

        elif message.chat.type == 'private':
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É <b>//bwl_show_list {–ö–æ–¥ –≥—Ä—É–ø–ø—ã}</b>',
                             reply_markup=types.ReplyKeyboardRemove(), parse_mode='html')
    # -----------------------------------------------------------------

    elif message.text == 'üí• –£–¥–∞–ª–∏—Ç—å —Å–ø–∏—Å–æ–∫':
        if message.chat.type in ['group', 'supergroup']:
            if str(bot.get_chat_member(message.chat.id, message.from_user.id).status) in ('creator', 'administrator'):
                bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –≤—ã –±—É–¥–µ—Ç–µ —É–¥–∞–ª—è—Ç—å —Å–ø–∏—Å–æ–∫. \n'
                                                  '–î–ª—è —ç—Ç–æ–≥–æ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É <b>//bwl_delete</b>',
                                 reply_markup=types.ReplyKeyboardRemove(), parse_mode='html')

        elif message.chat.type == 'private':
            bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –≤—ã –±—É–¥–µ—Ç–µ —É–¥–∞–ª—è—Ç—å —Å–ø–∏—Å–æ–∫. \n'
                                              '–î–ª—è —ç—Ç–æ–≥–æ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É <b>//bwl_delete {–ö–æ–¥ –≥—Ä—É–ø–ø—ã}</b>',
                             reply_markup=types.ReplyKeyboardRemove(), parse_mode='html')

    # -----------------------------------------------------------------

    # +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    # +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    # –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã BLACKLISTED_WORDS:

    if '//bwl_add' in message.text:

        # –î–õ–Ø –ì–†–£–ü–ü - –î–û–ë–ê–í–õ–ï–ù–ò–ï –§–†–ê–ó
        if message.chat.type in ['group', 'supergroup']:
            if str(bot.get_chat_member(message.chat.id, message.from_user.id).status) in ('creator', 'administrator'):
                log = '–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã'
                try:
                    wrd_list = [[m.lower() for m in n.split(' ')] for n in message.text.split('\n')[1:]
                                if n.split(' ')[1].lower() in 'mka']

                    con = sqlite3.connect('DB' + str(message.chat.id) + 'S8.db')
                    cur = con.cursor()

                    cur.executemany("INSERT OR IGNORE INTO Banned_words VALUES (?, ?) ",
                                    wrd_list)
                    con.commit()
                    con.close()
                except Exception:
                    log = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥'

                bot.delete_message(message.chat.id, message.message_id)
                bot.send_message(message.chat.id, log)

        # –î–õ–Ø –õ–° –ë–û–¢–ê - –î–û–ë–ê–í–õ–ï–ù–ò–ï –§–†–ê–ó
        elif message.chat.type == 'private':
            log = '–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã'
            try:
                wrd_list = [[m.lower() for m in n.split(' ')] for n in message.text.split('\n')[2:]
                            if n.split(' ')[1].lower() in 'mka']
                chat_id = message.text.split('\n')[1]
                db_name = 'DB' + chat_id + 'S8.db'

                if os.path.exists(db_name):
                    con = sqlite3.connect(db_name)
                else:
                    raise Exception

                cur = con.cursor()

                check = (cur.execute("SELECT admin FROM Admins WHERE admin = ?",
                                     (message.from_user.username,)).fetchone())

                if check:
                    cur.executemany("INSERT OR IGNORE INTO Banned_words VALUES (?, ?) ",
                                    wrd_list)
                    con.commit()
                    con.close()
                else:
                    log = '–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–æ–º –≥—Ä—É–ø–ø—ã'

            except Exception:
                log = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥'

            bot.send_message(message.chat.id, log)

    # -----------------------------------------------------------------

    if '//bwl_remove' in message.text:

        # –î–õ–Ø –ì–†–£–ü–ü - –£–î–ê–õ–ï–ù–ò–ï –§–†–ê–ó
        if message.chat.type in ['group', 'supergroup']:
            if str(bot.get_chat_member(message.chat.id, message.from_user.id).status) in ('creator', 'administrator'):
                log = '–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã'
                try:
                    wrd_list = [[m.lower() for m in n.strip(' ')] for n in message.text.split('\n')[1:]]

                    con = sqlite3.connect('DB' + str(message.chat.id) + 'S8.db')
                    cur = con.cursor()

                    for word in wrd_list:
                        try:
                            cur.execute("DELETE FROM Banned_words WHERE phrase = ?", (word,))
                        except Exception:
                            pass
                        con.commit()

                    con.close()
                except Exception:
                    log = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥'

                bot.delete_message(message.chat.id, message.message_id)
                bot.send_message(message.chat.id, log)

        # –î–õ–Ø –õ–° –ë–û–¢–ê - –£–î–ê–õ–ï–ù–ò–ï –§–†–ê–ó
        elif message.chat.type == 'private':
            log = '–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã'
            try:
                wrd_list = [[m.lower() for m in n.strip(' ')] for n in message.text.split('\n')[2:]]
                chat_id = message.text.split('\n')[1]
                db_name = 'DB' + chat_id + 'S8.db'

                if os.path.exists(db_name):
                    con = sqlite3.connect(db_name)
                else:
                    raise Exception

                cur = con.cursor()

                check = (cur.execute("SELECT admin FROM Admins WHERE admin = ?",
                                     (message.from_user.username,)).fetchone())

                if check:
                    for word in wrd_list:
                        try:
                            cur.execute("DELETE FROM Banned_words WHERE phrase = ?", (word,))
                        except Exception:
                            pass
                        con.commit()
                    con.close()

                else:
                    log = '–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–æ–º –≥—Ä—É–ø–ø—ã'

            except Exception:
                log = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥'

            bot.send_message(message.chat.id, log)

    # -----------------------------------------------------------------

    if '//bwl_show_list' in message.text:

        # –î–õ–Ø –ì–†–£–ü–ü - –ü–û–ö–ê–ó–ê–¢–¨ –°–ü–ò–°–û–ö
        if message.chat.type in ['group', 'supergroup']:
            if str(bot.get_chat_member(message.chat.id, message.from_user.id).status) in ('creator', 'administrator'):

                log = '–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞'

                try:
                    con = sqlite3.connect('DB' + str(message.chat.id) + 'S8.db')
                    cur = con.cursor()

                    raw_list = cur.execute("SELECT * FROM Banned_words").fetchall()
                    con.close()

                    full_list = '\n'.join([' : '.join(n) for n in raw_list])
                    if full_list:
                        log = '–°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤:\n' + full_list
                    else:
                        log = '–í —Å–ø–∏—Å–∫–µ –Ω–µ—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤'

                except Exception:
                    pass

                bot.delete_message(message.chat.id, message.message_id)
                bot.send_message(message.chat.id, log)

        # –î–õ–Ø –õ–° –ë–û–¢–ê - –ü–û–ö–ê–ó–ê–¢–¨ –°–ü–ò–°–û–ö
        elif message.chat.type == 'private':
            try:
                chat_id = message.text.split(' ')[1].strip(' ')
                db_name = 'DB' + chat_id + 'S8.db'

                if os.path.exists(db_name):
                    con = sqlite3.connect(db_name)
                else:
                    raise Exception

                cur = con.cursor()

                check = (cur.execute("SELECT admin FROM Admins WHERE admin = ?",
                                     (message.from_user.username,)).fetchone())

                if check:
                    raw_list = cur.execute("SELECT * FROM Banned_words").fetchall()
                    con.close()

                    full_list = '\n'.join([' : '.join(n) for n in raw_list])
                    if full_list:
                        log = '–°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤:\n' + full_list
                    else:
                        log = '–í —Å–ø–∏—Å–∫–µ –Ω–µ—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤'

                else:
                    log = '–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–æ–º –≥—Ä—É–ø–ø—ã'

            except Exception:
                log = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥'

            bot.send_message(message.chat.id, log)

    # -----------------------------------------------------------------

    if '//bwl_delete' in message.text:

        # –î–õ–Ø –ì–†–£–ü–ü - –£–î–ê–õ–ò–¢–¨ –°–ü–ò–°–û–ö
        if message.chat.type in ['group', 'supergroup']:
            if str(bot.get_chat_member(message.chat.id, message.from_user.id).status) in ('creator', 'administrator'):

                log = '–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞'

                try:
                    con = sqlite3.connect('DB' + str(message.chat.id) + 'S8.db')
                    cur = con.cursor()

                    cur.execute("DELETE FROM Banned_words")
                    con.commit()
                    con.close()

                    log = '–°–ø–∏—Å–æ–∫ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω'

                except Exception:
                    pass

                bot.delete_message(message.chat.id, message.message_id)
                bot.send_message(message.chat.id, log)

        # –î–õ–Ø –õ–° –ë–û–¢–ê - –£–î–ê–õ–ò–¢–¨ –°–ü–ò–°–û–ö
        elif message.chat.type == 'private':
            try:

                chat_id = message.text.split(' ')[1].strip(' ')
                db_name = 'DB' + chat_id + 'S8.db'

                if os.path.exists(db_name):
                    con = sqlite3.connect(db_name)
                else:
                    raise Exception

                cur = con.cursor()

                check = (cur.execute("SELECT admin FROM Admins WHERE admin = ?",
                                     (message.from_user.username,)).fetchone())

                if check:
                    cur.execute("DELETE FROM Banned_words")
                    con.commit()
                    con.close()
                    log = '–°–ø–∏—Å–æ–∫ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω'

                else:
                    log = '–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–æ–º –≥—Ä—É–ø–ø—ã'

            except Exception:
                log = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥'

            bot.send_message(message.chat.id, log)

    # +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    # +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    # –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã (–¢–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥–∞):
    if message.text == '//mdata':
        if str(bot.get_chat_member(message.chat.id, message.from_user.id).status) in ('creator', 'administrator'):
            bot.delete_message(message.chat.id, message.message_id)
            bot.send_message(message.chat.id, str(message)[:4047])

    # -----------------------------------------------------------------

    elif message.text == '//get_group_id':
        if message.chat.type in ['group', 'supergroup']:
            if str(bot.get_chat_member(message.chat.id, message.from_user.id).status) in ('creator', 'administrator'):
                bot.delete_message(message.chat.id, message.message_id)
                bot.send_message(message.chat.id, message.chat.id)

    # -----------------------------------------------------------------

    elif message.text == '//add_to_admin_list':
        if message.chat.type in ['group', 'supergroup']:
            if str(bot.get_chat_member(message.chat.id, message.from_user.id).status) in ('creator', 'administrator'):
                con = sqlite3.connect('DB' + str(message.chat.id) + 'S8.db')
                cur = con.cursor()

                cur.execute("INSERT OR IGNORE INTO Admins VALUES (?) ", tuple([str(message.from_user.username)]))
                con.commit()
                con.close()

                bot.delete_message(message.chat.id, message.message_id)
                bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω')

    # -----------------------------------------------------------------

    elif message.text == '//members':
        if message.chat.type in ['group', 'supergroup']:
            if str(bot.get_chat_member(message.chat.id, message.from_user.id).status) in ('creator', 'administrator'):
                try:
                    con = sqlite3.connect('DB' + str(message.chat.id) + 'S8.db')
                    cur = con.cursor()
                    done = cur.execute("SELECT username FROM User_ids").fetchall()
                    con.close()
                    bot.send_message(message.chat.id, '\n'.join([''.join(n) for n in done])[:4047])
                except Exception:
                    print('–û—à–∏–±–∫–∞ —Å –ø–æ–¥–∫—é—á–µ–Ω–∏–µ–º –∫ –ë–î')

                bot.delete_message(message.chat.id, message.message_id)

    # +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    # +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    # –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã (–° –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏)
    if '//mute' in message.text:
        log = '–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥'
        if message.chat.type in ['group', 'supergroup']:
            try:
                splitt = message.text.split(' ')
                username = splitt[1].strip('@')

                con = sqlite3.connect('DB' + str(message.chat.id) + 'S8.db')
                cur = con.cursor()
                user_id = cur.execute("SELECT username, id FROM User_ids").fetchall()
                con.close()

                user_id = user_id[[n[0] for n in user_id].index(username)][1]

                mt = splitt[2].split(':')

                try:
                    bot.restrict_chat_member(message.chat.id, user_id,
                                             until_date=(message.date + int(mt[0]) * 3600 * 24 + int(mt[1]) * 3600 +
                                                         int(mt[2]) * 60),
                                             can_send_messages=False)
                except Exception:
                    log = '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
                    raise Exception

                bot_mute_message = []
                if int(mt[2]) != 0:
                    bot_mute_message.append(str(mt[2]) + ' –º–∏–Ω—É—Ç')
                if int(mt[1]) != 0:
                    bot_mute_message.append(str(mt[1]) + ' —á–∞—Å–æ–≤')
                if int(mt[0]) != 0:
                    bot_mute_message.append(str(mt[0]) + ' –¥–Ω–µ–π')
                bot_mute_message = ', '.join(bot_mute_message)

                bot.send_message(message.chat.id, f'@{username} —Ç–µ–ø–µ—Ä—å –≤ –º—É—Ç–µ –Ω–∞: {bot_mute_message}')
            except Exception:
                bot.send_message(message.chat.id, log)

            bot.delete_message(message.chat.id, message.message_id)

        else:
            bot.send_message(message.chat.id, '–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö')

    # -----------------------------------------------------------------
    elif '//unmute' in message.text:
        if message.chat.type in ['group', 'supergroup']:

            log = '–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥'

            try:
                splitt = message.text.split(' ')
                username = splitt[1].strip('@')

                con = sqlite3.connect('DB' + str(message.chat.id) + 'S8.db')
                cur = con.cursor()
                user_id = cur.execute("SELECT username, id FROM User_ids").fetchall()
                con.close()

                user_id = user_id[[n[0] for n in user_id].index(username)][1]

                try:
                    bot.restrict_chat_member(message.chat.id, user_id, can_send_messages=True)
                except Exception:
                    log = '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
                    raise Exception

                bot.send_message(message.chat.id, f'@{username} –º–æ–∂–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –æ–±—â–µ–Ω–∏–µ')
            except Exception:
                bot.send_message(message.chat.id, log)

            bot.delete_message(message.chat.id, message.message_id)

        else:
            bot.send_message(message.chat.id, '–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö')

    # -----------------------------------------------------------------

    elif '//remove_from_admin_list' in message.text:
        if message.chat.type in ['group', 'supergroup']:
            if str(bot.get_chat_member(message.chat.id, message.from_user.id).status) in ('creator', 'administrator'):
                log = '–°–ø–∏—Å–æ–∫ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω'

                try:

                    splitt = message.text.split(' ')
                    username = splitt[1].strip('@').strip(' ')

                    con = sqlite3.connect('DB' + str(message.chat.id) + 'S8.db')
                    cur = con.cursor()

                    user_id = cur.execute("SELECT username, id FROM User_ids").fetchall()
                    user_id = user_id[[n[0] for n in user_id].index(username)][1]

                    if str(bot.get_chat_member(message.chat.id, user_id).status) not in ('creator', 'administrator'):
                        cur.execute("DELETE FROM Admins WHERE admin = ?", (username,))
                        con.commit()
                        con.close()
                    else:
                        log = '–ü–æ–ª–∑–æ–≤–∞—Ç–µ–ª—å –≤—Å—ë –µ—â—ë –∞–¥–º–∏–Ω'

                except Exception:
                    print('–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥')

                bot.delete_message(message.chat.id, message.message_id)
                bot.send_message(message.chat.id, log)

        else:
            bot.send_message(message.chat.id, '–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö')

    # -----------------------------------------------------------------

    elif '//kick' in message.text:
        if message.chat.type in ['group', 'supergroup']:
            if str(bot.get_chat_member(message.chat.id, message.from_user.id).status) in ('creator', 'administrator'):
                splitt = message.text.split(' ')
                username = splitt[1].strip('@').strip(' ')
                user_id = ''

                log = f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –±—ã–ª –∫–∏–∫–Ω—É—Ç –∏–∑ –≥—Ä—É–ø–ø—ã'

                con = sqlite3.connect('DB' + str(message.chat.id) + 'S8.db')
                cur = con.cursor()

                try:
                    user_id = cur.execute("SELECT username, id FROM User_ids").fetchall()
                    user_id = user_id[[n[0] for n in user_id].index(username)][1]
                except Exception:
                    log = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥'

                try:
                    bot.kick_chat_member(message.chat.id, user_id)
                    time.sleep(0.1)
                    bot.unban_chat_member(message.chat.id, user_id)
                except Exception:
                    log = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω'

                bot.send_message(message.chat.id, log)

    # -----------------------------------------------------------------

    elif '//ban' in message.text:
        if message.chat.type in ['group', 'supergroup']:
            if str(bot.get_chat_member(message.chat.id, message.from_user.id).status) in ('creator', 'administrator'):
                splitt = message.text.split(' ')
                username = splitt[1].strip('@').strip(' ')
                user_id = ''

                log = f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω'

                con = sqlite3.connect('DB' + str(message.chat.id) + 'S8.db')
                cur = con.cursor()

                try:
                    user_id = cur.execute("SELECT username, id FROM User_ids").fetchall()
                    user_id = user_id[[n[0] for n in user_id].index(username)][1]
                except Exception:
                    log = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥'

                try:
                    bot.kick_chat_member(message.chat.id, user_id)
                except Exception:
                    log = '–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞'

                bot.send_message(message.chat.id, log)

    # -----------------------------------------------------------------

    elif '//unban' in message.text:
        if message.chat.type in ['group', 'supergroup']:
            if str(bot.get_chat_member(message.chat.id, message.from_user.id).status) in ('creator', 'administrator'):
                splitt = message.text.split(' ')
                username = splitt[1].strip('@').strip(' ')
                user_id = ''

                log = f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –±—ã–ª —Ä–∞–∑–±–∞–Ω–µ–Ω'

                con = sqlite3.connect('DB' + str(message.chat.id) + 'S8.db')
                cur = con.cursor()

                try:
                    user_id = cur.execute("SELECT username, id FROM User_ids").fetchall()
                    user_id = user_id[[n[0] for n in user_id].index(username)][1]
                except Exception:
                    log = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥'

                try:
                    bot.unban_chat_member(message.chat.id, user_id)
                except Exception:
                    log = '–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞'

                bot.send_message(message.chat.id, log)

    # -----------------------------------------------------------------

    # +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    # +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    # –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã (–ù–∞ –∑–∞–º–µ–Ω—É)

    if '//rtd' in message.text:
        try:
            replaced_message = re.sub(r'//rtd', str(randint(4, 100)), message.text)

            bot.delete_message(message.chat.id, message.message_id)
            bot.send_message(message.chat.id, f'@{message.from_user.username}:\n{replaced_message}')
        except Exception:
            bot.send_message(message.chat.id, '–í–æ–∑–Ω–∏–∫–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞')

    # -----------------------------------------------------------------

    elif '//coin_flip' in message.text:
        try:
            coin = ['–æ—Ä—ë–ª', '—Ä–µ—à–∫–∞'][randint(0, 1)]
            replaced_message = re.sub(r'//coin_flip', coin, message.text)

            bot.delete_message(message.chat.id, message.message_id)
            bot.send_message(message.chat.id, f'@{message.from_user.username}:\n{replaced_message}')
        except Exception:
            bot.send_message(message.chat.id, '–í–æ–∑–Ω–∏–∫–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞')

    # -----------------------------------------------------------------

    elif '//pick_user' in message.text:
        if message.chat.type in ['group', 'supergroup']:
            try:
                con = sqlite3.connect('DB' + str(message.chat.id) + 'S8.db')
                cur = con.cursor()
                done = cur.execute("SELECT username FROM User_ids").fetchall()
                con.close()

                user = choice([''.join(n) for n in done])

                replaced_message = re.sub(r'//pick_user', '@' + str(user), message.text)

                bot.delete_message(message.chat.id, message.message_id)
                bot.send_message(message.chat.id, f'@{message.from_user.username}:\n{replaced_message}')
            except Exception:
                bot.send_message(message.chat.id, '–í–æ–∑–Ω–∏–∫–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞')

    # +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    # +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã User_ids

    if message.chat.type in ['group', 'supergroup']:
        con = sqlite3.connect('DB' + str(message.chat.id) + 'S8.db')
        cur = con.cursor()

        cur.execute("INSERT OR IGNORE INTO User_ids VALUES(?, ?) ",
                    tuple([str(message.from_user.username).strip('@'), str(message.from_user.id)]))
        con.commit()

        bwlist = cur.execute("SELECT * FROM Banned_words").fetchall()
        con.close()

        result = 'n'

        for bw in bwlist:
            if bw[0] in message.text:
                if bw[1] == 'k':
                    result = 'k'

                if bw[1] == 'm' and result != 'k':
                    result = 'm'

                if bw[1] == 'a' and result != 'm' and result != 'k':
                    result = 'a'

        if result == 'k':
            try:
                bot.kick_chat_member(message.chat.id, message.from_user.id)
                time.sleep(0.1)
                bot.unban_chat_member(message.chat.id, message.from_user.id)

                bot.send_message(message.chat.id, f'–ü–æ–ª–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} –±—ã–ª –∫–∏–∫–Ω—É—Ç '
                                                  f'–∏–∑ –≥—Ä—É–ø–ø—ã –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤')
            except Exception:
                pass

        elif result == 'm':
            try:
                bot.restrict_chat_member(message.chat.id, message.from_user.id,
                                         until_date=(message.date + 3600))
                bot.send_message(message.chat.id, f'–ü–æ–ª–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} –±—ã–ª –∑–∞–≥–ª—É—à–µ–Ω '
                                                  f'–Ω–∞ —á–∞—Å –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤')
            except Exception:
                pass

        elif result == 'a':
            if str(bot.get_chat_member(message.chat.id, message.from_user.id).status) not in (
                    'creator', 'administrator'):
                bot.reply_to(message, f'@{message.from_user.username}, –≤—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —Å–ª–æ–≤–æ, '
                                      f'–≤—Ö–æ–¥—è—â–µ–µ –≤ —Å–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö.\n'
                                      f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –≥—Ä—É–ø–ø—ã –º–æ–≥—É—Ç –ø—Ä–∏–Ω—è—Ç—å –º–µ—Ä—ã [bwl_a]')



# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


bot.polling(none_stop=True)
