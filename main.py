import telebot
import sqlite3
# Scary!
import re
from random import randint, choice
from telebot import types

# –°—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç–∞ –°8:
bot = telebot.TeleBot('7066300352:AAHoKT8LAaZd4pdnkbU3vlzBijI25bM7Xqo')


# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:


# --  START -- –ù–∞—á–∞–ª–æ –æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º, –≤—ã–≤–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–º–º–∞–Ω–¥

@bot.message_handler(commands=['start'])
def start(message):
    if message.chat.type == 'private':
        bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∫–∏ –≥—Ä—É–ø–ø S8. \n'
                                          f'–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª, –¥–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ —Å–≤–æ—é –≥—Ä—É–ø–ø—É.\n'
                                          f'–ß—Ç–æ —è –º–æ–≥—É:\n'
                                          f'üîπ –£–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏\n'
                                          f'üîπ –ü–æ—Å—ã–ª–∞—Ç—å –≤ –º—É—Ç* –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≥—Ä—É–ø–ø—ã\n'
                                          f'üîπ –†–µ—à–∞—Ç—å —Å–ø–æ—Ä—ã —Å –º–æ–Ω–µ—Ç–∫–æ–π –∏–ª–∏ –∫–æ—Å—Ç—å—é\n'
                                          f'üîπ –ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–¥–Ω—É –∏–∑ 3 –∏–≥—Ä –¥–ª—è –≤—Å–µ–π –≥—Ä—É–ø–ø—ã\n'
                                          f'–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥: /menu')
    else:
        bot.send_message(message.chat.id, f'–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∫–∏ –≥—Ä—É–ø–ø S8. \n'
                                          f'–ß—Ç–æ —è –º–æ–≥—É:\n'
                                          f'üîπ –£–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏\n'
                                          f'üîπ –ü–æ—Å—ã–ª–∞—Ç—å –≤ –º—É—Ç* –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≥—Ä—É–ø–ø—ã\n'
                                          f'üîπ –†–µ—à–∞—Ç—å —Å–ø–æ—Ä—ã —Å –º–æ–Ω–µ—Ç–∫–æ–π –∏–ª–∏ –∫–æ—Å—Ç—å—é\n'
                                          f'üîπ –ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–¥–Ω—É –∏–∑ 3 –∏–≥—Ä –¥–ª—è –≤—Å–µ–π –≥—Ä—É–ø–ø—ã\n'
                                          f'–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥: /menu')

        group_db_name = 'DB' + str(message.chat.id) + 'S8.db'

        con = sqlite3.connect(group_db_name)
        cur = con.cursor()

        cur.execute("""CREATE TABLE IF NOT EXISTS 
                        Admins(admin TEXT UNIQUE)""")

        cur.execute("""CREATE TABLE IF NOT EXISTS 
                        Banned_words(phrase TEXT UNIQUE, punishment_type TEXT)""")

        cur.execute("""CREATE TABLE IF NOT EXISTS 
                        User_ids(username TEXT UNIQUE, id TEXT UNIQUE)""")

        con.commit()
        con.close()


# ------------------------------------------------------------------------------------

# -- MENU -- –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥, –≤—ã–≤–æ–¥–∏—Ç –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.


@bot.message_handler(commands=['menu'])
def menu(message):
    bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n'
                                      '(‚ùó - –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º)\n'
                                      '/start - –ù–∞—á–∞–ª–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞\n'
                                      '/menu - –ú–µ–Ω—é —Å–æ –≤—Å–µ–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏\n'
                                      '/quick_menu - –ú–µ–Ω—é —Å –±—ã—Å—Ç—Ä—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏\n'
                                      '/blacklisted_words - ‚ùó - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏\n'
                                      '/coin_flip - –ü–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ—Ç –º–æ–Ω–µ—Ç–∫—É\n'
                                      '/rtd - –ö–∏–¥–∞–µ—Ç –∫–æ—Å—Ç—å\n'
                                      '/play_game - ‚ùó - –ó–∞–ø—É—Å–∫–∞–µ—Ç –∏–≥—Ä—É\n'
                                      '/anecdote - –ü–µ—á–∞—Ç–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç')


# ------------------------------------------------------------------------------------

# -- QUICK_MENU -- –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±—ã—Å—Ç—Ä—ã—Ö –∫–æ–º–∞–Ω–¥, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å //, –≤—Å–µ 3 –≤–∏–¥–∞

@bot.message_handler(commands=['quick_menu'])
def menu(message):
    bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ –±—ã—Å—Ç—Ä—ã—Ö –∫–æ–º–∞–Ω–¥ - –æ–Ω–∏ –≤–≤–æ–¥—è—Ç—Å—è –∫–∞–∫ —Å–æ–æ–±—â–µ–Ω–∏—è.\n'
                                      '(‚ùó - –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º)\n'
                                      '-- –¢–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥–∞:\n'
                                      '//mdata - ‚ùó - –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n'
                                      '//get_to_admin_list - ‚ùó - –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –≥—Ä—É–ø–ø—ã\n'
                                      '//get_group_id - ‚ùó - –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –∫–æ–¥ –≥—Ä—É–ø–ø—ã\n'
                                      '//members - –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã\n\n'
                                      '-- –ö–æ–º–∞–Ω–¥–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏\n'
                                      '//mute \n//unmute \n//remove_from_admin_list')


# ------------------------------------------------------------------------------------


# -- BLACKLISTED_WORDS -- –†–∞–±–æ—Ç–∞ —Å –Ω–µ–ª–µ–≥–∞–ª—å–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏


@bot.message_handler(commands=['blacklisted_words'])
def blacklisted_words_main(message):
    if message.chat.type in ['group', 'supergroup']:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, selective=True)
        btn1 = types.KeyboardButton('‚úÖ –î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–∞')
        btn2 = types.KeyboardButton('‚ùå –£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–∞')
        btn3 = types.KeyboardButton('‚û° –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫')
        btn4 = types.KeyboardButton('üí• –£–¥–∞–ª–∏—Ç—å —Å–ø–∏—Å–æ–∫')
        btn5 = types.KeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è')

        markup.add(btn1, btn2, btn3, btn4, btn5)

        bot.reply_to(message, '–°–µ–π—á–∞—Å –≤—ã –∏–∑–º–µ–Ω—è–µ—Ç–µ —Å–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤ –≤ –≥—Ä—É–ø–ø–µ.\n'
                              '–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–Ω–∞—Ç–æ–≤ —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.', reply_markup=markup)
    elif message.chat.type == 'private':
        bot.send_message(message.chat.id, f'–ï—Å–ª–∏ –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–æ–º –≥—Ä—É–ø–ø—ã, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–∞—à–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ '
                                          f'—Å –∫–æ–º–∞–Ω–¥–æ–π –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã.\n–î–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –ø—Ä–æ–ø–∏—Å–∞—Ç—å –≤ '
                                          f'–≥—Ä—É–ø–ø–µ -\n //get_group_id - –ø–æ–ª—É—á–∏—Ç—å –∫–æ–¥ –≥—Ä—É–ø–ø—ã\n//add_to_admin_list - '
                                          f'–ß—Ç–æ–±—ã –º–Ω–µ –∑–Ω–∞—Ç—å, —á—Ç–æ –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–æ–º')

# ------------------------------------------------------------------------------------

# -- COIN_FLIP -- –ü–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ—Ç –º–æ–Ω–µ—Ç–∫—É –∏ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∑–∞–æ–º –≤—ã–±–∏—Ä–∞–µ—Ç –æ—Ä–ª–∞ –∏–ª–∏ —Ä–µ—à–∫—É.


@bot.message_handler(commands=['coin_flip'])
def coin_flip(message):
    coin_random = randint(0, 1)
    coin = ['–û–†–Å–õ', '–†–ï–®–ö–ê'][coin_random]
    word = ['–æ–∫–∞–∑–∞–ª—Å—è', '–æ–∫–∞–∑–∞–ª–∞—Å—å'][coin_random]
    bot.reply_to(message, f'–ú–æ–Ω–µ—Ç–∫–∞ –±—ã–ª–∞ –ø–æ–¥–±—Ä–æ—à–µ–Ω–∞ –≤ –≤–æ–∑–¥—É—Ö, –∏ –∫–æ–≥–¥–∞ –æ–Ω–∞ –ø—Ä–∏–∑–µ–º–ª–∏–ª–∞—Å—å, –Ω–∞ –Ω–µ–π {word}...'
                          f' \n \n<b>{coin}!</b>', parse_mode='html')


# ------------------------------------------------------------------------------------

# -- DICE_ROLL -- –ö–∏–¥–∞–µ—Ç n-–≥—Ä–∞–Ω–Ω—É—é –∫–æ—Å—Ç—å –ø–æ —á–∏—Å–ª—É, –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.


@bot.message_handler(commands=['rtd'])
def dice_roll(message):
    bot.reply_to(message, '–ù–∞–±–µ—Ä–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω –∫–æ—Å—Ç–∏ (4-100) –∏ <em>–ø–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ,'
                          ' –≥–¥–µ –≤—ã –≤–≤–æ–¥–∏–ª–∏ –∫–æ–º–∞–Ω–¥—É</em>', parse_mode='html')


# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# –ü—Ä–æ–≤–∫—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ —Å –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:


@bot.message_handler(func=lambda message: True)
def commands_in_text(message):
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏:

    if message.text == 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è':
        bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: /menu', reply_markup=types.ReplyKeyboardRemove())

    # -----------------------------------------------------------------

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ —Å –∫–æ–º–∞–Ω–¥—ã BLACKLISTED_WORDS:
    if message.text == '‚úÖ –î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–∞':
        bot.send_message(message.chat.id, '–•–∞—Ä–æ—à! 1', reply_markup=types.ReplyKeyboardRemove())

    elif message.text == '‚ùå –£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–∞':
        bot.send_message(message.chat.id, '–•–∞—Ä–æ—à! 2', reply_markup=types.ReplyKeyboardRemove())

    elif message.text == '‚û° –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫':
        bot.send_message(message.chat.id, '–•–∞—Ä–æ—à! 3', reply_markup=types.ReplyKeyboardRemove())

    elif message.text == 'üí• –£–¥–∞–ª–∏—Ç—å —Å–ø–∏—Å–æ–∫':
        bot.send_message(message.chat.id, '–•–∞—Ä–æ—à! 4', reply_markup=types.ReplyKeyboardRemove())

    # -----------------------------------------------------------------

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ —Å –∫–æ–º–∞–Ω–¥—ã DICE_ROLL:
    if message.text.isnumeric():
        if message.reply_to_message is not None:
            if message.reply_to_message.from_user.id == message.from_user.id:
                if 4 <= int(message.text) <= 100:
                    dice_rolled = randint(1, int(message.text))
                    bot.reply_to(message, f'–ö–æ—Å—Ç—å –±—ã–ª–∞ –±—Ä–æ—à–µ–Ω–∞, –∏ –Ω–∞ –Ω–µ–π –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ...'
                                          f'\n\n<b>{dice_rolled}!</b>', parse_mode='html')
                else:
                    bot.reply_to(message, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Å—Ç–∏! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')

    # +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    # +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    # –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã (–¢–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥–∞):
    if message.text == '//mdata':
        if str(bot.get_chat_member(message.chat.id, message.from_user.id).status) in ('creator', 'administrator'):
            bot.delete_message(message.chat.id, message.message_id)
            bot.send_message(message.chat.id, str(message)[:4047])

    # -----------------------------------------------------------------

    elif message.text == '//get_group_id':
        if message.chat.type in ['group', 'supergroup']:
            if str(bot.get_chat_member(message.chat.id, message.from_user.id).status) in ('creator', 'administrator'):
                bot.delete_message(message.chat.id, message.message_id)
                bot.send_message(message.chat.id, message.chat.id)

    # -----------------------------------------------------------------

    elif message.text == '//add_to_admin_list':
        if message.chat.type in ['group', 'supergroup']:
            if str(bot.get_chat_member(message.chat.id, message.from_user.id).status) in ('creator', 'administrator'):
                con = sqlite3.connect('DB' + str(message.chat.id) + 'S8.db')
                cur = con.cursor()

                cur.execute("INSERT OR IGNORE INTO Admins VALUES (?) ", tuple([str(message.from_user.username)]))
                con.commit()
                con.close()

                bot.delete_message(message.chat.id, message.message_id)
                bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω')

    # -----------------------------------------------------------------

    elif message.text == '//members':
        if message.chat.type in ['group', 'supergroup']:
            if str(bot.get_chat_member(message.chat.id, message.from_user.id).status) in ('creator', 'administrator'):
                con = sqlite3.connect('DB' + str(message.chat.id) + 'S8.db')
                cur = con.cursor()
                done = cur.execute("SELECT username FROM User_ids").fetchall()
                con.close()

                bot.delete_message(message.chat.id, message.message_id)
                bot.send_message(message.chat.id, '\n'.join([''.join(n) for n in done])[:4047])

    # +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    # +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    # –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã (–° –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏)
    if '//mute' in message.text:
        log = '–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥'
        if message.chat.type in ['group', 'supergroup']:
            try:
                splitt = message.text.split(' ')
                username = splitt[1].strip('@')

                con = sqlite3.connect('DB' + str(message.chat.id) + 'S8.db')
                cur = con.cursor()
                user_id = cur.execute("SELECT username, id FROM User_ids").fetchall()
                con.close()

                user_id = user_id[[n[0] for n in user_id].index(username)][1]

                mt = splitt[2].split(':')

                try:
                    bot.restrict_chat_member(message.chat.id, user_id,
                                             until_date=message.date + int(mt[0]) * 3600 * 24 + int(mt[1]) * 3600
                                                        + int(mt[2]) * 60,
                                             can_send_messages=False)
                except Exception:
                    log = '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
                    raise Exception

                bot_mute_message = []
                if int(mt[2]) != 0:
                    bot_mute_message.append(str(mt[2]) + ' –º–∏–Ω—É—Ç')
                if int(mt[1]) != 0:
                    bot_mute_message.append(str(mt[1]) + ' —á–∞—Å–æ–≤')
                if int(mt[0]) != 0:
                    bot_mute_message.append(str(mt[0]) + ' –¥–Ω–µ–π')
                bot_mute_message = ', '.join(bot_mute_message)

                bot.send_message(message.chat.id, f'@{username} —Ç–µ–ø–µ—Ä—å –≤ –º—É—Ç–µ –Ω–∞: {bot_mute_message}')
            except Exception:
                bot.send_message(message.chat.id, log)

            bot.delete_message(message.chat.id, message.message_id)

        else:
            bot.send_message(message.chat.id, '–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö')

    # -----------------------------------------------------------------
    elif '//unmute' in message.text:
        if message.chat.type in ['group', 'supergroup']:

            log = '–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥'

            try:
                splitt = message.text.split(' ')
                username = splitt[1].strip('@')

                con = sqlite3.connect('DB' + str(message.chat.id) + 'S8.db')
                cur = con.cursor()
                user_id = cur.execute("SELECT username, id FROM User_ids").fetchall()
                con.close()

                user_id = user_id[[n[0] for n in user_id].index(username)][1]

                try:
                    bot.restrict_chat_member(message.chat.id, user_id, can_send_messages=True)
                except Exception:
                    log = '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
                    raise Exception

                bot.send_message(message.chat.id, f'@{username} –º–æ–∂–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –æ–±—â–µ–Ω–∏–µ')
            except Exception:
                bot.send_message(message.chat.id, log)

            bot.delete_message(message.chat.id, message.message_id)

        else:
            bot.send_message(message.chat.id, '–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö')

    # -----------------------------------------------------------------

    elif '//remove_from_admin_list' in message.text:
        if message.chat.type in ['group', 'supergroup']:
            if str(bot.get_chat_member(message.chat.id, message.from_user.id).status) in ('creator', 'administrator'):
                log = '–°–ø–∏—Å–æ–∫ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω'

                splitt = message.text.split(' ')
                username = splitt[1].strip('@')

                con = sqlite3.connect('DB' + str(message.chat.id) + 'S8.db')
                cur = con.cursor()

                user_id = cur.execute("SELECT username, id FROM User_ids").fetchall()
                user_id = user_id[[n[0] for n in user_id].index(username)][1]

                if str(bot.get_chat_member(message.chat.id, user_id).status) not in ('creator', 'administrator'):
                    cur.execute("DELETE FROM Admins WHERE admin LIKE '%{user_id}%'")
                    con.commit()
                    con.close()
                else:
                    log = '–ü–æ–ª–∑–æ–≤–∞—Ç–µ–ª—å –≤—Å—ë –µ—â—ë –∞–¥–º–∏–Ω'

                bot.delete_message(message.chat.id, message.message_id)
                bot.send_message(message.chat.id, log)

    # +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    # +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    # –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã (–ù–∞ –∑–∞–º–µ–Ω—É)

    if '//rtd' in message.text:
        replaced_message = re.sub(r'//rtd', str(randint(4, 100)), message.text)

        bot.delete_message(message.chat.id, message.message_id)
        bot.send_message(message.chat.id, f'@{message.from_user.username}:\n{replaced_message}')

    # -----------------------------------------------------------------

    elif '//coin_flip' in message.text:
        coin = ['–æ—Ä—ë–ª', '—Ä–µ—à–∫–∞'][randint(0, 1)]
        replaced_message = re.sub(r'//coin_flip', coin, message.text)

        bot.delete_message(message.chat.id, message.message_id)
        bot.send_message(message.chat.id, f'@{message.from_user.username}:\n{replaced_message}')

    # -----------------------------------------------------------------

    elif '//pick_user' in message.text:
        if message.chat.type in ['group', 'supergroup']:
            con = sqlite3.connect('DB' + str(message.chat.id) + 'S8.db')
            cur = con.cursor()
            done = cur.execute("SELECT username FROM User_ids").fetchall()
            con.close()

            user = choice([''.join(n) for n in done])

            replaced_message = re.sub(r'//pick_user', '@' + str(user), message.text)

            bot.delete_message(message.chat.id, message.message_id)
            bot.send_message(message.chat.id, f'@{message.from_user.username}:\n{replaced_message}')

    # +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    # +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã User_ids

    if message.chat.type in ['group', 'supergroup']:
        con = sqlite3.connect('DB' + str(message.chat.id) + 'S8.db')
        cur = con.cursor()

        cur.execute("INSERT OR IGNORE INTO User_ids VALUES(?, ?) ",
                    tuple([str(message.from_user.username).strip('@'), str(message.from_user.id)]))
        con.commit()
        con.close()


# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


bot.polling(none_stop=True)
